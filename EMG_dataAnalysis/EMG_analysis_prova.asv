%% TITLE: EMG data analysis for tSCS 
%  AUTHOR: Anna Sparpani
%  DATE: nov. 23
% The following code is used to analyse the EMG data acquired during
% transcutaneous spinal cord stimulation. The main interest of the signal
% analysis is the identification of the PRM reflex, which is observed
% around 50micros after the stimulation artefact on the EMG baseline. 

clear all 
close all
clc

%% Import data
% you have to be in the folder with the data!

[filename, pathname, filterindex] = uigetfile('*.mat', 'Pick a MATLAB  file');
load(filename)

EMG=[];
%x=EMGdata.signals.values; %save EMG values in variable x
plots_on=0;

%% Format data into a time series 
for j = 1:12

    % EMGdata is a 3D matrix with 12 channels
    % for each channel take the 2D matrix of data [time,20]
    emg = squeeze(EMGdata.signals.values(j,:,:))';
    %sta is a column array with how many samples are stored in each vector
    %of 20 
    sta = EMGcount.signals.values(:,:);
    pp = EMGcount.time;

    si = size(emg);
    temp = [];
    temp2 = [];
    
    % create the vector of samples appending packages one after the other 
    for i = 1:si(1)
        if (sta(i) > 0)
        temp = [temp emg(i, 1:sta(i))];
        end
    end
    temp(end-(double(sta(end)-2)):end)=[];
    
    for i=1:si(1)-1
        if (sta(i) > 0)
        temp2=[temp2 linspace(pp(i),pp(i+1)-(0.01/(double(sta(i)))),sta(i))];
        end
    end
    EMG(:,j)=temp;
end

EMGok=[EMG(:,5),EMG(:,6),EMG(:,7),EMG(:,8),EMG(:,9),EMG(:,10),EMG(:,11),EMG(:,12)];
x=EMGok;

% Acquistion frequency EMG
Fs_EMG=1024;
time=0:1/Fs_EMG:length(EMGok)/Fs_EMG-1/Fs_EMG;

% Draw plots of raw data
if plots_on
    figure()
    title('RIGHT Leg')
    subplot(4,1,1), plot(time,x(:,1)), ylabel('Quad DX'), grid on %17
    subplot(4,1,2), plot(time,x(:,2)), ylabel('Ham DX'), grid on %18
    subplot(4,1,3), plot(time,x(:,3)), ylabel('Gast DX'), grid on %19
    subplot(4,1,4), plot(time,x(:,4)), ylabel('TA DX'), grid on %20
    
    figure()
    title('LEFT LEG')
    subplot(4,1,1), plot(time,x(:,5)), ylabel('Quad SX'), grid on %21
    subplot(4,1,2), plot(time,x(:,6)), ylabel('Ham SX'), grid on %22
    subplot(4,1,3), plot(time,x(:,7)), ylabel('Gast SX'), grid on %23
    subplot(4,1,4), plot(time,x(:,8)), ylabel('TA SX'), grid on %24
end 
%% Signal processing

% Filtering
fcutlow=10;   
fcuthigh=250;   
[z,p,k]=butter(4,[fcutlow,fcuthigh]/(Fs_EMG/2),'bandpass');
[sos,g]=zp2sos(z,p,k); %apply filter to signal
x_filt(:,:) = filtfilt(sos,g,x(:,:));
[b, a] = sos2tf(sos, g); % Extract coefficients
xfilter = filter(b, a, x_filt(:,:)); %apply filter
[pff,ff]=pwelch(xfilter(:,1),[],[],[],Fs_EMG);

% Filtered graphs
if plots_on
    figure()
    title('Right Leg')
    subplot(4,1,1), plot(time,xfilter(:,1)), ylabel('mV'), xlabel('s'), grid off, title(' DX Quad'); %17
    subplot(4,1,2), plot(time,xfilter(:,2)), ylabel('mV'),xlabel('s'), grid off, title('DX Hamstring'); %18
    subplot(4,1,3), plot(time,xfilter(:,3)), ylabel('mV'), xlabel('s'), grid off, title(' DX Gast'); %19
    subplot(4,1,4), plot(time,xfilter(:,4)), ylabel('mV'),xlabel('s'), grid off, title('DX TA'); %20
     
    figure()
    title('Left Leg')
    subplot(4,1,1), plot(time,xfilter(:,5)), ylabel('mV'), xlabel('s'), grid off, title('SX Quad'); %21
    subplot(4,1,2), plot(time,xfilter(:,6)), ylabel('mV'),xlabel('s'), grid off, title('SX Hamstring'); %22
    subplot(4,1,3), plot(time,xfilter(:,7)), ylabel('mV'), xlabel('s'), grid off, title('SX Gast'); %23
    subplot(4,1,4), plot(time,xfilter(:,8)), ylabel('mV'),xlabel('s'), grid off, title('SX TA'); %24
end
%% Peaks detection
% min peak height depends is manual, I would like it to be automatically
% set

% Finding the Min Peak Height for every muscle, based on the std deviation
% 1. Calculate standard deviation of the filtered signal
std_dev = std(xfilter);
% 2. Set a threshold as a multiple of the standard deviation
minPeakHeight_multiplier = 5; % You can adjust this multiplier, I kept it quite 
                          % high because the stimulation artefacts are much 
                          % higher than the rest of the signal
minPeakHeight = minPeakHeight_multiplier * std_dev;

meanPeakDistance=600; % mean peak distance 1200 = 0.6s 

% Right leg
[pk1,locs1] = findpeaks(xfilter(:,1),"MinPeakDistance",meanPeakDistance,"MinPeakHeight",minPeakHeight(1,1));
 quad_dx=xfilter(:,1);
[pk2,locs2] = findpeaks(xfilter(:,2),"MinPeakDistance",meanPeakDistance,"MinPeakHeight",minPeakHeight(1,2));
 hams_dx=xfilter(:,2);
[pk3,locs3] = findpeaks(xfilter(:,3),"MinPeakDistance",meanPeakDistance,"MinPeakHeight",minPeakHeight(1,3));
gast_dx=xfilter(:,3);
[pk4,locs4] = findpeaks(xfilter(:,4),"MinPeakDistance",meanPeakDistance,"MinPeakHeight",minPeakHeight(1,4));
ta_dx=xfilter(:,4);

% Left leg
[pk5,locs5] = findpeaks(xfilter(:,5),"MinPeakDistance",meanPeakDistance,"MinPeakHeight",minPeakHeight(1,5));
  quad_sx=xfilter(:,5);
[pk6,locs6] = findpeaks(xfilter(:,6),"MinPeakDistance",meanPeakDistance,"MinPeakHeight",minPeakHeight(1,6));
  hams_sx=xfilter(:,6);
[pk7,locs7] = findpeaks(xfilter(:,7),"MinPeakDistance",meanPeakDistance,"MinPeakHeight",minPeakHeight(1,7));
  gast_sx=xfilter(:,7);
[pk8,locs8] = findpeaks(xfilter(:,8),"MinPeakDistance",meanPeakDistance,"MinPeakHeight",minPeakHeight(1,8));
  ta_sx=xfilter(:,8);
%%
% Graphs of filtered signals with peaks
figure()
title('Right Leg - filtered')
plot(hams_dx), hold on, plot (locs1,pk1,'o'), ylabel('mV'), title(' DX Quad');
avg_value = mean(hams_dx(i,:));
% Plot a yellow band around the average value (Â±0.025)
fill([1, length(hams_dx), length(hams_dx), 1], [avg_value + 0.025, avg_value + 0.025, avg_value - 0.025, avg_value - 0.025], 'y', 'EdgeColor', 'none', 'FaceAlpha', 0.3);


if plots_on
    figure()
    title('Right Leg - filtered')
    subplot(4,1,1), plot(quad_dx), hold on, plot (locs1,pk1,'o'), ylabel('mV'), title(' DX Quad');
    % subplot(4,1,2), plot(hams_dx), hold on, plot (locs2,pk2,'o'), ylabel('mV'), title(' DX Hams');
    % subplot(4,1,3), plot(gast_dx), hold on, plot (locs3,pk3,'o'), ylabel('mV'), title(' DX Gast');
    % subplot(4,1,4), plot(ta_dx), hold on, plot (locs4,pk4,'o'), ylabel('mV'), title(' DX TA');
    % 
    % figure()
    % title('Left Leg - filtered')
    % subplot(4,1,1), plot(quad_sx), hold on, plot (locs5,pk5,'o'), ylabel('mV'), title(' SX Quad'); 
    % subplot(4,1,2), plot(hams_sx), hold on, plot (locs6,pk6,'o'), ylabel('mV'), title(' SX Hams');
    % subplot(4,1,3), plot(gast_sx), hold on, plot (locs7,pk7,'o'), ylabel('mV'), title(' SX Gast');
    % subplot(4,1,4), plot(ta_sx), hold on, plot (locs8,pk8,'o'), ylabel('mV'), title(' SX TA');
end
%% M Waves detection based on slope trial
% 
% % Find M-wave start based on slope in a specific range after positive peak
% m_wave_start_threshold = 0.0001; % You can adjust this threshold
% samples_after_positive_peak = 20; % Adjust this range based on your signal characteristics
% 
% % Right leg
% derivative_ta_dx = diff(ta_dx);
% m_wave_start_ta_dx = locs1(1,1) + find(abs(derivative_ta_dx(locs1(1,1)+samples_after_positive_peak)) < m_wave_start_threshold, 1, 'first');
% 
% Mwaves4 = [];
% Mwaves4(1, :) = ta_dx(m_wave_start_ta_dx: m_wave_start_ta_dx+52);
% 
% time_TA=(0:1/Fs_EMG:length(Mwaves4)/Fs_EMG-1/Fs_EMG)*1000; %ms
% 
% figure()
% plot(time_Hams,Mwaves4(1,:))
% title('M wave TA DX')
% grid on    
% ylabel ('mV')
% xlabel('ms')

%% M waves detection and plot

startIdx_quad = locs1 +7; %7 samples di artefatto
startIdx_hams = locs2 +7; %+ 3;
startIdx_gast = locs3 +7;
startIdx_ta = locs4 +7;
startIsx_ta=locs5+1;
duration_quad = 200; % ~100 ms
duration_hams = 200; %Federico usava 52 (50ms) 15ms di latenza + 35ms di Mwave (1024Hz*50ms=57samples)

% Right Leg M-wave
Mwaves1 = [];
for i = 1: length(startIdx_quad) 
    Mwaves1(i, :) = quad_dx(startIdx_quad(i): startIdx_quad(i)+duration_quad);
end
Mwaves2 = [];
for i = 1: length(startIdx_hams) 
    Mwaves2(i, :) = hams_dx(startIdx_hams(i): startIdx_hams(i)+duration_hams);
end
Mwaves3 = [];
for i = 1: length(startIdx_gast) 
    Mwaves3(i, :) = gast_dx(startIdx_gast(i): startIdx_gast(i)+duration_quad);
end
Mwaves4 = [];
for i = 1: length(startIdx_ta) 
    Mwaves4(i, :) = ta_dx(startIdx_ta(i): startIdx_ta(i)+duration_hams);
end
% Left Leg M-wave
Mwaves5 = [];
for i = 1: length(startIdx_quad) 
    Mwaves5(i, :) = quad_sx(startIdx_quad(i): startIdx_quad(i)+duration_quad);
end
Mwaves6 = [];
for i = 1: length(startIdx_hams) 
    Mwaves6(i, :) = hams_sx(startIdx_hams(i): startIdx_hams(i)+duration_hams);
end
Mwaves7 = [];
for i = 1: length(startIdx_gast) 
    Mwaves7(i, :) = gast_sx(startIdx_gast(i): startIdx_gast(i)+duration_quad);
end
Mwaves8 = [];
for i = 1: length(startIdx_ta) 
    Mwaves8(i, :) = ta_sx(startIdx_ta(i): startIdx_ta(i)+duration_hams);
end

% M-WAVES GRAPHS
if plots_on
    plotMwave("M wave Quad DX", Mwaves1, Fs_EMG);
    plotMwave("M wave Hams DX", Mwaves2, Fs_EMG);
    plotMwave("M wave Gast DX", Mwaves3, Fs_EMG);
    plotMwave("M wave TA DX", Mwaves4, Fs_EMG);
    % plotMwave("M wave Quad SX", Mwaves5, Fs_EMG);
    % plotMwave("M wave Hams SX", Mwaves6, Fs_EMG);
    % plotMwave("M wave Gast SX", Mwaves7, Fs_EMG);
    % plotMwave("M wave TA SX", Mwaves8, Fs_EMG);
end

%% M waves peaks detection
s=struct('W1',Mwaves1,'W2',Mwaves2,'W3',Mwaves3,'W4',Mwaves4,'W5',Mwaves5,'W6',Mwaves6,'W7',Mwaves7,'W8',Mwaves8);
% maxima 
M1=max(s.W1,[],2); M2=max(s.W2,[],2); M3=max(s.W3,[],2); M4=max(s.W4,[],2);
M5=max(s.W5,[],2); M6=max(s.W6,[],2); M7=max(s.W7,[],2); M8=max(s.W8,[],2);

% minima
m1=min(s.W1,[],2); m2=min(s.W2,[],2); m3=min(s.W3,[],2); m4=min(s.W4,[],2);
m5=min(s.W5,[],2); m6=min(s.W6,[],2); m7=min(s.W7,[],2); m8=min(s.W8,[],2);

%indici
n1=0; n2=0; n3=0; n4=0; n5=0; n6=0; n7=0; n8=0;

n1 = ((sum((M1-m1) >= 0.05))/length(m1))*100;
n2 = ((sum((M2-m2) >= 0.05))/length(m2))*100;
n3 = ((sum((M3-m3) >= 0.05))/length(m3))*100;
n4 = ((sum((M4-m4) >= 0.05))/length(m4))*100;
n5 = ((sum((M5-m5) >= 0.05))/length(m5))*100;
n6 = ((sum((M6-m6) >= 0.05))/length(m6))*100;
n7 = ((sum((M7-m7) >= 0.05))/length(m7))*100;
n8 = ((sum((M8-m8) >= 0.05))/length(m8))*100;


formatSpec1="NÂ° of Mwave above 50uV is %4.2f/100 for Quad Dx\n";
formatSpec2="NÂ° of Mwave above 50uV is %4.2f/100 for Hams Dx\n";
formatSpec3="NÂ° of Mwave above 50uV is %4.2f/100 for Gast Dx\n";
formatSpec4="NÂ° of Mwave above 50uV is %4.2f/100 for TA Dx\n\n";
formatSpec5="NÂ° of Mwave above 50uV is %4.2f/100 for Quad Sx\n";
formatSpec6="NÂ° of Mwave above 50uV is %4.2f/100 for Hams Sx\n";
formatSpec7="NÂ° of Mwave above 50uV is %4.2f/100 for Gast Sx\n";
formatSpec8="NÂ° of Mwave above 50uV is %4.2f/100 for TA Sx\n";

fprintf(formatSpec1,n1);
fprintf(formatSpec2,n2);
fprintf(formatSpec3,n3);
fprintf(formatSpec4,n4);
fprintf(formatSpec5,n5);
fprintf(formatSpec6,n6);
fprintf(formatSpec7,n7);
fprintf(formatSpec8,n8);