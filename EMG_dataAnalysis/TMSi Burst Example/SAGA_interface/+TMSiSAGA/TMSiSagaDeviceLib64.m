function [methodinfo,structs,enuminfo,ThunkLibName]=TMSiSagaDeviceLib64_orig
%TMSISAGADEVICELIB64_ORIG Create structures to define interfaces found in 'TMSi_Device_API'.

%This function was generated by loadlibrary.m parser version  on Wed Sep  4 14:11:26 2019
%perl options:'TMSi_Device_API.i -outfile=TMSiSagaDeviceLib64_orig.m -thunkfile=TMSiSagaDeviceLib_thunk_pcwin64.c -header=TMSi_Device_API.h'
ival={cell(1,0)}; % change 0 to the actual number of functions to preallocate the data.
structs=[];enuminfo=[];fcnNum=1;
fcns=struct('name',ival,'calltype',ival,'LHS',ival,'RHS',ival,'alias',ival,'thunkname', ival);
MfilePath=fileparts(mfilename('fullpath'));
ThunkLibName=fullfile(MfilePath,'TMSiSagaDeviceLib_thunk_pcwin64');
%  uint32_t TMSiGetDeviceList ( TMSiDevListType * TMSiDeviceList , int32_t TMSiDeviceListLen , uint32_t DSInterfaceType , uint32_t DRInterfaceType ); 
fcns.thunkname{fcnNum}='uint32voidPtrint32uint32uint32Thunk';fcns.name{fcnNum}='TMSiGetDeviceList'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='uint32'; fcns.RHS{fcnNum}={'TMSiDevListPtr', 'int32', 'uint32', 'uint32'};fcnNum=fcnNum+1;
%  uint32_t TMSiOpenDevice ( void ** TMSiDeviceHandle , uint32_t TMSiDeviceID , uint32_t DRInterfaceType ); 
fcns.thunkname{fcnNum}='uint32voidPtruint32uint32Thunk';fcns.name{fcnNum}='TMSiOpenDevice'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='uint32'; fcns.RHS{fcnNum}={'voidPtrPtr', 'uint32', 'uint32'};fcnNum=fcnNum+1;
%  uint32_t TMSiCloseDevice ( void * TMSiDeviceHandle ); 
fcns.thunkname{fcnNum}='uint32voidPtrThunk';fcns.name{fcnNum}='TMSiCloseDevice'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='uint32'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  uint32_t TMSiGetDeviceStatus ( void * TMSiDeviceHandle , TMSiDevStatReportType * DeviceStatus ); 
fcns.thunkname{fcnNum}='uint32voidPtrvoidPtrThunk';fcns.name{fcnNum}='TMSiGetDeviceStatus'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='uint32'; fcns.RHS{fcnNum}={'voidPtr', 'TMSiDevStatReportPtr'};fcnNum=fcnNum+1;
%  uint32_t TMSiGetFullDeviceStatus ( void * TMSiDeviceHandle , TMSiDevFullStatReportType * FullDeviceStatus , TMSiDevBatReportType * DeviceBatteryStatusList , int32_t BatteryStatusListLen , TMSiTimeType * DeviceTime , TMSiDevStorageReportType * StorageReport ); 
fcns.thunkname{fcnNum}='uint32voidPtrvoidPtrvoidPtrint32voidPtrvoidPtrThunk';fcns.name{fcnNum}='TMSiGetFullDeviceStatus'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='uint32'; fcns.RHS{fcnNum}={'voidPtr', 'TMSiDevFullStatReportPtr', 'TMSiDevBatReportPtr', 'int32', 'TMSiTimePtr', 'TMSiDevStorageReportPtr'};fcnNum=fcnNum+1;
%  uint32_t TMSiGetDeviceConfig ( void * TMSiDeviceHandle , TMSiDevGetConfigType * RecorderConfiguration , TMSiDevChDescType * ChannelsList , int32_t ChannelsListLen ); 
fcns.thunkname{fcnNum}='uint32voidPtrvoidPtrvoidPtrint32Thunk';fcns.name{fcnNum}='TMSiGetDeviceConfig'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='uint32'; fcns.RHS{fcnNum}={'voidPtr', 'TMSiDevGetConfigPtr', 'TMSIDevChDescPtr', 'int32'};fcnNum=fcnNum+1;
%  uint32_t TMSiSetDeviceConfig ( void * TMSiDeviceHandle , TMSiDevSetConfigType * RecorderConfiguration , TMSiDevSetChCfgType * ChannelConfigList , int32_t ChannelConfigListLen ); 
fcns.thunkname{fcnNum}='uint32voidPtrvoidPtrvoidPtrint32Thunk';fcns.name{fcnNum}='TMSiSetDeviceConfig'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='uint32'; fcns.RHS{fcnNum}={'voidPtr', 'TMSiDevSetConfigPtr', 'TMSIDevSetChCfgPtr', 'int32'};fcnNum=fcnNum+1;
%  uint32_t TMSiSetDeviceRTC ( void * TMSiDeviceHandle , TMSiTimeType * NewTime ); 
fcns.thunkname{fcnNum}='uint32voidPtrvoidPtrThunk';fcns.name{fcnNum}='TMSiSetDeviceRTC'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='uint32'; fcns.RHS{fcnNum}={'voidPtr', 'TMSiTimePtr'};fcnNum=fcnNum+1;
%  uint32_t TMSiGetDeviceSensor ( void * TMSiDeviceHandle , TMSiDevGetSensType * SensorsList , uint32_t SensorsListLen , uint32_t * RetSensorsListLen ); 
fcns.thunkname{fcnNum}='uint32voidPtrvoidPtruint32voidPtrThunk';fcns.name{fcnNum}='TMSiGetDeviceSensor'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='uint32'; fcns.RHS{fcnNum}={'voidPtr', 'TMSiDevGetSensPtr', 'uint32', 'uint32Ptr'};fcnNum=fcnNum+1;
%  uint32_t TMSiSetDeviceSensor ( void * TMSiDeviceHandle , TMSiSetDevSensType * SensorList , int32_t SensorsListLen ); 
fcns.thunkname{fcnNum}='uint32voidPtrvoidPtrint32Thunk';fcns.name{fcnNum}='TMSiSetDeviceSensor'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='uint32'; fcns.RHS{fcnNum}={'voidPtr', 'TMSiSetDevSensPtr', 'int32'};fcnNum=fcnNum+1;
%  uint32_t TMSiSetDeviceSampling ( void * TMSiDeviceHandle , TMSiDevSampleReqType * DeviceSamplingMode ); 
fcns.thunkname{fcnNum}='uint32voidPtrvoidPtrThunk';fcns.name{fcnNum}='TMSiSetDeviceSampling'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='uint32'; fcns.RHS{fcnNum}={'voidPtr', 'TMSiDevSampleReqPtr'};fcnNum=fcnNum+1;
%  uint32_t TMSiSetDeviceImpedance ( void * TMSiDeviceHandle , TMSiDevImpReqType * DeviceImpedanceMode ); 
fcns.thunkname{fcnNum}='uint32voidPtrvoidPtrThunk';fcns.name{fcnNum}='TMSiSetDeviceImpedance'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='uint32'; fcns.RHS{fcnNum}={'voidPtr', 'TMSiDevImpReqPtr'};fcnNum=fcnNum+1;
%  uint32_t TMSiGetDeviceData ( void * TMSiDeviceHandle , float * DeviceData , uint32_t DeviceDataBufferSize , uint32_t * NrOfSets , int32_t * DataType ); 
fcns.thunkname{fcnNum}='uint32voidPtrvoidPtruint32voidPtrvoidPtrThunk';fcns.name{fcnNum}='TMSiGetDeviceData'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='uint32'; fcns.RHS{fcnNum}={'voidPtr', 'singlePtr', 'uint32', 'uint32Ptr', 'int32Ptr'};fcnNum=fcnNum+1;
%  uint32_t TMSiGetDeviceDataBuffered ( void * TMSiDeviceHandle , int32_t * DeviceDataBuffered ); 
fcns.thunkname{fcnNum}='uint32voidPtrvoidPtrThunk';fcns.name{fcnNum}='TMSiGetDeviceDataBuffered'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='uint32'; fcns.RHS{fcnNum}={'voidPtr', 'int32Ptr'};fcnNum=fcnNum+1;
%  uint32_t TMSiResetDeviceDataBuffer ( void * TMSiDeviceHandle ); 
fcns.thunkname{fcnNum}='uint32voidPtrThunk';fcns.name{fcnNum}='TMSiResetDeviceDataBuffer'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='uint32'; fcns.RHS{fcnNum}={'voidPtr'};fcnNum=fcnNum+1;
%  uint32_t TMSiGetDeviceStorageList ( void * TMSiDeviceHandle , TMSiDevRecListType * RecordingsList , int32_t RecordingsListLen , int32_t * RetRecordingListLen ); 
fcns.thunkname{fcnNum}='uint32voidPtrvoidPtrint32voidPtrThunk';fcns.name{fcnNum}='TMSiGetDeviceStorageList'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='uint32'; fcns.RHS{fcnNum}={'voidPtr', 'TMSiDevRecListPtr', 'int32', 'int32Ptr'};fcnNum=fcnNum+1;
%  uint32_t TMSiGetRecordingFile ( void * TMSiDeviceHandle , uint16_t RecFileID , uint16_t StartStop , TMSiDevRecDetailsType * RecordingMetaData , TMSiDevImpReportType * ImpedanceReportList , int32_t ImpedanceReportListLen ); 
fcns.thunkname{fcnNum}='uint32voidPtruint16uint16voidPtrvoidPtrint32Thunk';fcns.name{fcnNum}='TMSiGetRecordingFile'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='uint32'; fcns.RHS{fcnNum}={'voidPtr', 'uint16', 'uint16', 'TMSiDevRecDetailsPtr', 'TMSiDevImpReportPtr', 'int32'};fcnNum=fcnNum+1;
%  uint32_t TMSiGetDeviceAmbConfig ( void * TMSiDeviceHandle , TMSiDevRecCfgType * AmbulantConfiguration ); 
fcns.thunkname{fcnNum}='uint32voidPtrvoidPtrThunk';fcns.name{fcnNum}='TMSiGetDeviceAmbConfig'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='uint32'; fcns.RHS{fcnNum}={'voidPtr', 'TMSiDevRecCfgPtr'};fcnNum=fcnNum+1;
%  uint32_t TMSiSetDeviceAmbConfig ( void * TMSiDeviceHandle , TMSiDevRecCfgType * AmbulantConfiguration ); 
fcns.thunkname{fcnNum}='uint32voidPtrvoidPtrThunk';fcns.name{fcnNum}='TMSiSetDeviceAmbConfig'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='uint32'; fcns.RHS{fcnNum}={'voidPtr', 'TMSiDevRecCfgPtr'};fcnNum=fcnNum+1;
%  uint32_t TMSiGetDeviceRepairData ( void * TMSiDeviceHandle , float * RepairDataBuffer , int32_t RepairDataBufferSize , int32_t * NrOfSamples , TMSiDevRepairReqType * RepairInfo ); 
fcns.thunkname{fcnNum}='uint32voidPtrvoidPtrint32voidPtrvoidPtrThunk';fcns.name{fcnNum}='TMSiGetDeviceRepairData'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='uint32'; fcns.RHS{fcnNum}={'voidPtr', 'singlePtr', 'int32', 'int32Ptr', 'TMSiDevRepairReqPtr'};fcnNum=fcnNum+1;
%  uint32_t TMSiGetDeviceCalibration ( void * TMSiDeviceHandle , TMSiDevChCalType * ChCalValuesList , int32_t ChCalValuesListLen , int32_t * RetChCalValuesListLen ); 
fcns.thunkname{fcnNum}='uint32voidPtrvoidPtrint32voidPtrThunk';fcns.name{fcnNum}='TMSiGetDeviceCalibration'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='uint32'; fcns.RHS{fcnNum}={'voidPtr', 'TMSiDevChCalPtr', 'int32', 'int32Ptr'};fcnNum=fcnNum+1;
%  uint32_t TMSiSetDeviceCalibration ( void * TMSiDeviceHandle , TMSiDevChCalType * ChCalValuesList , int32_t ChCalValuesListLen ); 
fcns.thunkname{fcnNum}='uint32voidPtrvoidPtrint32Thunk';fcns.name{fcnNum}='TMSiSetDeviceCalibration'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='uint32'; fcns.RHS{fcnNum}={'voidPtr', 'TMSiDevChCalPtr', 'int32'};fcnNum=fcnNum+1;
%  uint32_t TMSiSetDeviceCalibrationMode ( void * TMSiDeviceHandle , int32_t SetCalibrationMode ); 
fcns.thunkname{fcnNum}='uint32voidPtrint32Thunk';fcns.name{fcnNum}='TMSiSetDeviceCalibrationMode'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='uint32'; fcns.RHS{fcnNum}={'voidPtr', 'int32'};fcnNum=fcnNum+1;
%  uint32_t TMSiGetDeviceDiagnostics ( void * TMSiDeviceHandle , TMSiDevGetDiagStatType * DeviceDiagnostics ); 
fcns.thunkname{fcnNum}='uint32voidPtrvoidPtrThunk';fcns.name{fcnNum}='TMSiGetDeviceDiagnostics'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='uint32'; fcns.RHS{fcnNum}={'voidPtr', 'TMSiDevGetDiagStatPtr'};fcnNum=fcnNum+1;
%  uint32_t TMSiSetDeviceDiagnostics ( void * TMSiDeviceHandle , TMSiDevSetDiagStatType * DeviceDiagnosticsCfg ); 
fcns.thunkname{fcnNum}='uint32voidPtrvoidPtrThunk';fcns.name{fcnNum}='TMSiSetDeviceDiagnostics'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='uint32'; fcns.RHS{fcnNum}={'voidPtr', 'TMSiDevSetDiagStatPtr'};fcnNum=fcnNum+1;
%  uint32_t TMSiGetDeviceLog ( void * TMSiDeviceHandle , uint32_t TMSiDevice , uint32_t DeviceLogBufferSize , uint32_t * RetDeviceLogBufferSize , uint8_t * DeviceLogData ); 
fcns.thunkname{fcnNum}='uint32voidPtruint32uint32voidPtrvoidPtrThunk';fcns.name{fcnNum}='TMSiGetDeviceLog'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='uint32'; fcns.RHS{fcnNum}={'voidPtr', 'uint32', 'uint32', 'uint32Ptr', 'uint8Ptr'};fcnNum=fcnNum+1;
%  uint32_t TMSiGetDeviceFWStatus ( void * TMSiDeviceHandle , uint32_t TMSiDevice , TMSiDevFWStatusReportType * FWReport ); 
fcns.thunkname{fcnNum}='uint32voidPtruint32voidPtrThunk';fcns.name{fcnNum}='TMSiGetDeviceFWStatus'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='uint32'; fcns.RHS{fcnNum}={'voidPtr', 'uint32', 'TMSiDevFWStatusReportPtr'};fcnNum=fcnNum+1;
%  uint32_t TMSiSetDeviceFWUpdate ( void * TMSiDeviceHandle , uint32_t TMSiDevice , TMSiFWHeaderFileType * NewFWHeader ); 
fcns.thunkname{fcnNum}='uint32voidPtruint32voidPtrThunk';fcns.name{fcnNum}='TMSiSetDeviceFWUpdate'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='uint32'; fcns.RHS{fcnNum}={'voidPtr', 'uint32', 'TMSiFWHeaderFilePtr'};fcnNum=fcnNum+1;
%  uint32_t TMSiPushFWUpdate ( void * TMSiDeviceHandle , uint32_t TMSiDevice , uint32_t FWDataSize , uint8_t * FWData ); 
fcns.thunkname{fcnNum}='uint32voidPtruint32uint32voidPtrThunk';fcns.name{fcnNum}='TMSiPushFWUpdate'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='uint32'; fcns.RHS{fcnNum}={'voidPtr', 'uint32', 'uint32', 'uint8Ptr'};fcnNum=fcnNum+1;
%  uint32_t TMSiDoneFWUpdate ( void * TMSiDeviceHandle , uint32_t TMSiDevice , int32_t FWAction ); 
fcns.thunkname{fcnNum}='uint32voidPtruint32int32Thunk';fcns.name{fcnNum}='TMSiDoneFWUpdate'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='uint32'; fcns.RHS{fcnNum}={'voidPtr', 'uint32', 'int32'};fcnNum=fcnNum+1;
%  uint32_t TMSiSetProductConfig ( void * TMSiDeviceHandle , TMSiDevProductConfigType * ProductConfig , TMSiDevProductChCfgType * ChannelConfigList , uint32_t ChannelConfigListLen ); 
fcns.thunkname{fcnNum}='uint32voidPtrvoidPtrvoidPtruint32Thunk';fcns.name{fcnNum}='TMSiSetProductConfig'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='uint32'; fcns.RHS{fcnNum}={'voidPtr', 'TMSiDevProductConfigPtr', 'TMSiDevProductChCfgPtr', 'uint32'};fcnNum=fcnNum+1;
%  uint32_t TMSiGetDevNetworkConfig ( void * TMSiDeviceHandle , TMSiDevNetworkConfigType * GetDSNetworkConig ); 
fcns.thunkname{fcnNum}='uint32voidPtrvoidPtrThunk';fcns.name{fcnNum}='TMSiGetDevNetworkConfig'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='uint32'; fcns.RHS{fcnNum}={'voidPtr', 'TMSiDevNetworkConfigPtr'};fcnNum=fcnNum+1;
%  uint32_t TMSiSetDevNetworkConfig ( void * TMSiDeviceHandle , TMSiDevNetworkConfigType * SetDSNetworkConig ); 
fcns.thunkname{fcnNum}='uint32voidPtrvoidPtrThunk';fcns.name{fcnNum}='TMSiSetDevNetworkConfig'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}='uint32'; fcns.RHS{fcnNum}={'voidPtr', 'TMSiDevNetworkConfigPtr'};fcnNum=fcnNum+1;
structs.TMSiDevList.packing=1;
structs.TMSiDevList.members=struct('TMSiDeviceID', 'uint16', 'DSSerialNr', 'uint32', 'DRAvailable', 'uint16', 'DRSerialNr', 'uint32');
structs.TMSiDevStatReport.packing=1;
structs.TMSiDevStatReport.members=struct('DSSerialNr', 'uint32', 'DRSerialNr', 'uint32', 'DSInterface', 'uint16', 'DRInterface', 'uint16', 'DSDevAPIVersion', 'uint16', 'DRAvailable', 'uint16', 'NrOfBatteries', 'uint16', 'NrOfChannels', 'uint16');
structs.TMSiDevFullStatReport.packing=1;
structs.TMSiDevFullStatReport.members=struct('DSSerialNr', 'uint32', 'DRSerialNr', 'uint32', 'DRWiFiPaired', 'uint32', 'KeepAliveTimeout', 'int16', 'PowerState', 'uint16', 'DSTemp', 'int16', 'DRTemp', 'int16');
structs.TMSiDevBatReport.packing=1;
structs.TMSiDevBatReport.members=struct('BatID', 'int16', 'BatTemp', 'int16', 'BatVoltage', 'int16', 'BatRemainingCapacity', 'int16', 'BatFullChargeCapacity', 'int16', 'BatAverageCurrent', 'int16', 'BatTimeToEmpty', 'int16', 'BatStateOfCharge', 'int16', 'BatStateOfHealth', 'int16', 'BatCycleCount', 'int16');
structs.TMSiTime.packing=1;
structs.TMSiTime.members=struct('Seconds', 'int16', 'Minutes', 'int16', 'Hours', 'int16', 'DayOfMonth', 'int16', 'Month', 'int16', 'Year', 'int16', 'WeekDay', 'int16', 'YearDay', 'int16');
structs.TMSiDevStorageReport.packing=1;
structs.TMSiDevStorageReport.members=struct('TotalSizeMB', 'uint32', 'UsedSizeMB', 'uint32');
structs.TMSiDevGetConfig.packing=1;
structs.TMSiDevGetConfig.members=struct('DRSerialNumber', 'uint32', 'DRDevID', 'uint16', 'NrOfHWChannels', 'uint16', 'NrOfChannels', 'uint16', 'NrOfSensors', 'uint16', 'BaseSampleRateHz', 'uint16', 'AltBaseSampleRateHz', 'uint16', 'ConfiguredInterface', 'uint16', 'InterFaceBandWidth', 'int32', 'TriggersEnabled', 'int16', 'RefMethod', 'int16', 'AutoRefMethod', 'int16', 'DRSyncOutDiv', 'int16', 'DRSyncOutDutyCycl', 'int16', 'DSSyncOutDiv', 'int16', 'DSSyncOutDutyCycl', 'int16', 'RepairLogging', 'int16', 'AmbRecording', 'int16', 'AvailableRecordings', 'int16', 'DeviceName__1', 'uint8', 'DeviceName__2', 'uint8', 'DeviceName__3', 'uint8', 'DeviceName__4', 'uint8', 'DeviceName__5', 'uint8', 'DeviceName__6', 'uint8', 'DeviceName__7', 'uint8', 'DeviceName__8', 'uint8', 'DeviceName__9', 'uint8', 'DeviceName__10', 'uint8', 'DeviceName__11', 'uint8', 'DeviceName__12', 'uint8', 'DeviceName__13', 'uint8', 'DeviceName__14', 'uint8', 'DeviceName__15', 'uint8', 'DeviceName__16', 'uint8', 'DeviceName__17', 'uint8', 'DeviceName__18', 'uint8');
structs.TMSIDevChDesc.packing=1;
structs.TMSIDevChDesc.members=struct('ChannelType', 'uint16', 'ChannelFormat', 'uint16', 'ChanDivider', 'int16', 'ImpDivider', 'int16', 'ChannelBandWidth', 'int32', 'Exp', 'int16', 'UnitName__1', 'uint8', 'UnitName__2', 'uint8', 'UnitName__3', 'uint8', 'UnitName__4', 'uint8', 'UnitName__5', 'uint8', 'UnitName__6', 'uint8', 'UnitName__7', 'uint8', 'UnitName__8', 'uint8', 'UnitName__9', 'uint8', 'UnitName__10', 'uint8', 'DefChanName__1', 'uint8', 'DefChanName__2', 'uint8', 'DefChanName__3', 'uint8', 'DefChanName__4', 'uint8', 'DefChanName__5', 'uint8', 'DefChanName__6', 'uint8', 'DefChanName__7', 'uint8', 'DefChanName__8', 'uint8', 'DefChanName__9', 'uint8', 'DefChanName__10', 'uint8', 'AltChanName__1', 'uint8', 'AltChanName__2', 'uint8', 'AltChanName__3', 'uint8', 'AltChanName__4', 'uint8', 'AltChanName__5', 'uint8', 'AltChanName__6', 'uint8', 'AltChanName__7', 'uint8', 'AltChanName__8', 'uint8', 'AltChanName__9', 'uint8', 'AltChanName__10', 'uint8');
structs.SensorDataHeader.packing=1;
structs.SensorDataHeader.members=struct('ManufacturerID', 'uint16', 'Serialnr', 'uint32', 'ProductIdentifier', 'uint64', 'ChannelCount', 'uint8', 'AdditionalStructs', 'uint8');
structs.SensorDefaultChannel.packing=1;
structs.SensorDefaultChannel.members=struct('StructID', 'uint16', 'ChannelName__1', 'uint8', 'ChannelName__2', 'uint8', 'ChannelName__3', 'uint8', 'ChannelName__4', 'uint8', 'ChannelName__5', 'uint8', 'ChannelName__6', 'uint8', 'ChannelName__7', 'uint8', 'ChannelName__8', 'uint8', 'ChannelName__9', 'uint8', 'ChannelName__10', 'uint8', 'UnitName__1', 'uint8', 'UnitName__2', 'uint8', 'UnitName__3', 'uint8', 'UnitName__4', 'uint8', 'UnitName__5', 'uint8', 'UnitName__6', 'uint8', 'UnitName__7', 'uint8', 'UnitName__8', 'uint8', 'UnitName__9', 'uint8', 'UnitName__10', 'uint8', 'Exponent', 'int16', 'Gain', 'single', 'Offset', 'single');
structs.SensorDummyChannel.packing=1;
structs.SensorDummyChannel.members=struct('StructID', 'uint16');
structs.TMSiContact.packing=1;
structs.TMSiContact.members=struct('StructID', 'uint16', 'CompanyName__1', 'uint8', 'CompanyName__2', 'uint8', 'CompanyName__3', 'uint8', 'CompanyName__4', 'uint8', 'CompanyName__5', 'uint8', 'CompanyName__6', 'uint8', 'CompanyName__7', 'uint8', 'CompanyName__8', 'uint8', 'CompanyName__9', 'uint8', 'CompanyName__10', 'uint8', 'WWW__1', 'uint8', 'WWW__2', 'uint8', 'WWW__3', 'uint8', 'WWW__4', 'uint8', 'WWW__5', 'uint8', 'WWW__6', 'uint8', 'WWW__7', 'uint8', 'WWW__8', 'uint8', 'WWW__9', 'uint8', 'WWW__10', 'uint8', 'WWW__11', 'uint8', 'WWW__12', 'uint8', 'WWW__13', 'uint8', 'WWW__14', 'uint8', 'WWW__15', 'uint8', 'WWW__16', 'uint8', 'WWW__17', 'uint8', 'WWW__18', 'uint8', 'WWW__19', 'uint8', 'WWW__20', 'uint8', 'Email__1', 'uint8', 'Email__2', 'uint8', 'Email__3', 'uint8', 'Email__4', 'uint8', 'Email__5', 'uint8', 'Email__6', 'uint8', 'Email__7', 'uint8', 'Email__8', 'uint8', 'Email__9', 'uint8', 'Email__10', 'uint8', 'Email__11', 'uint8', 'Email__12', 'uint8', 'Email__13', 'uint8', 'Email__14', 'uint8', 'Email__15', 'uint8', 'Email__16', 'uint8', 'Email__17', 'uint8', 'Email__18', 'uint8', 'Email__19', 'uint8', 'Email__20', 'uint8', 'Email__21', 'uint8', 'Email__22', 'uint8', 'Email__23', 'uint8', 'Email__24', 'uint8', 'Email__25', 'uint8', 'Email__26', 'uint8', 'Email__27', 'uint8', 'Email__28', 'uint8', 'Email__29', 'uint8', 'Email__30', 'uint8', 'Phone__1', 'uint8', 'Phone__2', 'uint8', 'Phone__3', 'uint8', 'Phone__4', 'uint8', 'Phone__5', 'uint8', 'Phone__6', 'uint8', 'Phone__7', 'uint8', 'Phone__8', 'uint8', 'Phone__9', 'uint8', 'Phone__10', 'uint8', 'Phone__11', 'uint8', 'Phone__12', 'uint8', 'Phone__13', 'uint8', 'Phone__14', 'uint8', 'Phone__15', 'uint8', 'Phone__16', 'uint8');
structs.TMSiDevSetConfig.packing=1;
structs.TMSiDevSetConfig.members=struct('DRSerialNumber', 'uint32', 'NrOfChannels', 'uint16', 'SetBaseSampleRateHz', 'uint16', 'SetConfiguredInterface', 'uint16', 'SetTriggers', 'int16', 'SetRefMethod', 'int16', 'SetAutoRefMethod', 'int16', 'SetDRSyncOutDiv', 'int16', 'DRSyncOutDutyCycl', 'int16', 'SetRepairLogging', 'int16', 'PerformFactoryReset', 'int16', 'StoreAsDefault', 'int16', 'WebIfCtrl', 'uint16', 'PinKey__1', 'uint8', 'PinKey__2', 'uint8', 'PinKey__3', 'uint8', 'PinKey__4', 'uint8');
structs.TMSIDevSetChCfg.packing=1;
structs.TMSIDevSetChCfg.members=struct('ChanNr', 'uint16', 'ChanDivider', 'int16', 'AltChanName__1', 'uint8', 'AltChanName__2', 'uint8', 'AltChanName__3', 'uint8', 'AltChanName__4', 'uint8', 'AltChanName__5', 'uint8', 'AltChanName__6', 'uint8', 'AltChanName__7', 'uint8', 'AltChanName__8', 'uint8', 'AltChanName__9', 'uint8', 'AltChanName__10', 'uint8');
structs.TMSiDevGetSens.packing=1;
structs.TMSiDevGetSens.members=struct('ChanNr', 'uint16', 'IOMode', 'int16', 'SensorID', 'int16', 'SensorMetaData__1', 'uint8', 'SensorMetaData__2', 'uint8', 'SensorMetaData__3', 'uint8', 'SensorMetaData__4', 'uint8', 'SensorMetaData__5', 'uint8', 'SensorMetaData__6', 'uint8', 'SensorMetaData__7', 'uint8', 'SensorMetaData__8', 'uint8', 'SensorMetaData__9', 'uint8', 'SensorMetaData__10', 'uint8', 'SensorMetaData__11', 'uint8', 'SensorMetaData__12', 'uint8', 'SensorMetaData__13', 'uint8', 'SensorMetaData__14', 'uint8', 'SensorMetaData__15', 'uint8', 'SensorMetaData__16', 'uint8', 'SensorMetaData__17', 'uint8', 'SensorMetaData__18', 'uint8', 'SensorMetaData__19', 'uint8', 'SensorMetaData__20', 'uint8', 'SensorMetaData__21', 'uint8', 'SensorMetaData__22', 'uint8', 'SensorMetaData__23', 'uint8', 'SensorMetaData__24', 'uint8', 'SensorMetaData__25', 'uint8', 'SensorMetaData__26', 'uint8', 'SensorMetaData__27', 'uint8', 'SensorMetaData__28', 'uint8', 'SensorMetaData__29', 'uint8', 'SensorMetaData__30', 'uint8', 'SensorMetaData__31', 'uint8', 'SensorMetaData__32', 'uint8', 'SensorMetaData__33', 'uint8', 'SensorMetaData__34', 'uint8', 'SensorMetaData__35', 'uint8', 'SensorMetaData__36', 'uint8', 'SensorMetaData__37', 'uint8', 'SensorMetaData__38', 'uint8', 'SensorMetaData__39', 'uint8', 'SensorMetaData__40', 'uint8', 'SensorMetaData__41', 'uint8', 'SensorMetaData__42', 'uint8', 'SensorMetaData__43', 'uint8', 'SensorMetaData__44', 'uint8', 'SensorMetaData__45', 'uint8', 'SensorMetaData__46', 'uint8', 'SensorMetaData__47', 'uint8', 'SensorMetaData__48', 'uint8', 'SensorMetaData__49', 'uint8', 'SensorMetaData__50', 'uint8', 'SensorMetaData__51', 'uint8', 'SensorMetaData__52', 'uint8', 'SensorMetaData__53', 'uint8', 'SensorMetaData__54', 'uint8', 'SensorMetaData__55', 'uint8', 'SensorMetaData__56', 'uint8', 'SensorMetaData__57', 'uint8', 'SensorMetaData__58', 'uint8', 'SensorMetaData__59', 'uint8', 'SensorMetaData__60', 'uint8', 'SensorMetaData__61', 'uint8', 'SensorMetaData__62', 'uint8', 'SensorMetaData__63', 'uint8', 'SensorMetaData__64', 'uint8', 'SensorMetaData__65', 'uint8', 'SensorMetaData__66', 'uint8', 'SensorMetaData__67', 'uint8', 'SensorMetaData__68', 'uint8', 'SensorMetaData__69', 'uint8', 'SensorMetaData__70', 'uint8', 'SensorMetaData__71', 'uint8', 'SensorMetaData__72', 'uint8', 'SensorMetaData__73', 'uint8', 'SensorMetaData__74', 'uint8', 'SensorMetaData__75', 'uint8', 'SensorMetaData__76', 'uint8', 'SensorMetaData__77', 'uint8', 'SensorMetaData__78', 'uint8', 'SensorMetaData__79', 'uint8', 'SensorMetaData__80', 'uint8', 'SensorMetaData__81', 'uint8', 'SensorMetaData__82', 'uint8', 'SensorMetaData__83', 'uint8', 'SensorMetaData__84', 'uint8', 'SensorMetaData__85', 'uint8', 'SensorMetaData__86', 'uint8', 'SensorMetaData__87', 'uint8', 'SensorMetaData__88', 'uint8', 'SensorMetaData__89', 'uint8', 'SensorMetaData__90', 'uint8', 'SensorMetaData__91', 'uint8', 'SensorMetaData__92', 'uint8', 'SensorMetaData__93', 'uint8', 'SensorMetaData__94', 'uint8', 'SensorMetaData__95', 'uint8', 'SensorMetaData__96', 'uint8', 'SensorMetaData__97', 'uint8', 'SensorMetaData__98', 'uint8', 'SensorMetaData__99', 'uint8', 'SensorMetaData__100', 'uint8', 'SensorMetaData__101', 'uint8', 'SensorMetaData__102', 'uint8', 'SensorMetaData__103', 'uint8', 'SensorMetaData__104', 'uint8', 'SensorMetaData__105', 'uint8', 'SensorMetaData__106', 'uint8', 'SensorMetaData__107', 'uint8', 'SensorMetaData__108', 'uint8', 'SensorMetaData__109', 'uint8', 'SensorMetaData__110', 'uint8', 'SensorMetaData__111', 'uint8', 'SensorMetaData__112', 'uint8', 'SensorMetaData__113', 'uint8', 'SensorMetaData__114', 'uint8', 'SensorMetaData__115', 'uint8', 'SensorMetaData__116', 'uint8', 'SensorMetaData__117', 'uint8', 'SensorMetaData__118', 'uint8', 'SensorMetaData__119', 'uint8', 'SensorMetaData__120', 'uint8', 'SensorMetaData__121', 'uint8', 'SensorMetaData__122', 'uint8', 'SensorMetaData__123', 'uint8', 'SensorMetaData__124', 'uint8', 'SensorMetaData__125', 'uint8', 'SensorMetaData__126', 'uint8', 'SensorMetaData__127', 'uint8', 'SensorMetaData__128', 'uint8');
structs.TMSiSetDevSens.packing=1;
structs.TMSiSetDevSens.members=struct('ChanNr', 'uint16', 'IOMode', 'int16');
structs.TMSiDevSampleReq.packing=1;
structs.TMSiDevSampleReq.members=struct('SetSamplingMode', 'uint16', 'DisableAutoswitch', 'uint16', 'DisableRepairLogging', 'uint16', 'DisableAvrRefCalc', 'uint16');
structs.TMSiDevImpReq.packing=1;
structs.TMSiDevImpReq.members=struct('SetImpedanceMode', 'uint16');
structs.TMSiDevRecList.packing=1;
structs.TMSiDevRecList.members=struct('RecFileID', 'uint16', 'RecFileName__1', 'uint8', 'RecFileName__2', 'uint8', 'RecFileName__3', 'uint8', 'RecFileName__4', 'uint8', 'RecFileName__5', 'uint8', 'RecFileName__6', 'uint8', 'RecFileName__7', 'uint8', 'RecFileName__8', 'uint8', 'RecFileName__9', 'uint8', 'RecFileName__10', 'uint8', 'RecFileName__11', 'uint8', 'RecFileName__12', 'uint8', 'RecFileName__13', 'uint8', 'RecFileName__14', 'uint8', 'RecFileName__15', 'uint8', 'RecFileName__16', 'uint8', 'RecFileName__17', 'uint8', 'RecFileName__18', 'uint8', 'RecFileName__19', 'uint8', 'RecFileName__20', 'uint8', 'RecFileName__21', 'uint8', 'RecFileName__22', 'uint8', 'RecFileName__23', 'uint8', 'RecFileName__24', 'uint8', 'RecFileName__25', 'uint8', 'RecFileName__26', 'uint8', 'RecFileName__27', 'uint8', 'RecFileName__28', 'uint8', 'RecFileName__29', 'uint8', 'RecFileName__30', 'uint8', 'RecFileName__31', 'uint8', 'RecFileName__32', 'uint8', 'StartTime', 'TMSiTime', 'StopTime', 'TMSiTime');
structs.TMSiDevRecDetails.packing=1;
structs.TMSiDevRecDetails.members=struct('StructID', 'int16', 'ProtoVer', 'int16', 'RecFileType', 'int16', 'RecFileID', 'int16', 'StorageStatus', 'int32', 'NoOfSamples', 'int32', 'RecFileName__1', 'uint8', 'RecFileName__2', 'uint8', 'RecFileName__3', 'uint8', 'RecFileName__4', 'uint8', 'RecFileName__5', 'uint8', 'RecFileName__6', 'uint8', 'RecFileName__7', 'uint8', 'RecFileName__8', 'uint8', 'RecFileName__9', 'uint8', 'RecFileName__10', 'uint8', 'RecFileName__11', 'uint8', 'RecFileName__12', 'uint8', 'RecFileName__13', 'uint8', 'RecFileName__14', 'uint8', 'RecFileName__15', 'uint8', 'RecFileName__16', 'uint8', 'RecFileName__17', 'uint8', 'RecFileName__18', 'uint8', 'RecFileName__19', 'uint8', 'RecFileName__20', 'uint8', 'RecFileName__21', 'uint8', 'RecFileName__22', 'uint8', 'RecFileName__23', 'uint8', 'RecFileName__24', 'uint8', 'RecFileName__25', 'uint8', 'RecFileName__26', 'uint8', 'RecFileName__27', 'uint8', 'RecFileName__28', 'uint8', 'RecFileName__29', 'uint8', 'RecFileName__30', 'uint8', 'RecFileName__31', 'uint8', 'RecFileName__32', 'uint8', 'StartTime', 'TMSiTime', 'StopTime', 'TMSiTime', 'ImpAvailable', 'int16', 'PatientID__1', 'uint8', 'PatientID__2', 'uint8', 'PatientID__3', 'uint8', 'PatientID__4', 'uint8', 'PatientID__5', 'uint8', 'PatientID__6', 'uint8', 'PatientID__7', 'uint8', 'PatientID__8', 'uint8', 'PatientID__9', 'uint8', 'PatientID__10', 'uint8', 'PatientID__11', 'uint8', 'PatientID__12', 'uint8', 'PatientID__13', 'uint8', 'PatientID__14', 'uint8', 'PatientID__15', 'uint8', 'PatientID__16', 'uint8', 'PatientID__17', 'uint8', 'PatientID__18', 'uint8', 'PatientID__19', 'uint8', 'PatientID__20', 'uint8', 'PatientID__21', 'uint8', 'PatientID__22', 'uint8', 'PatientID__23', 'uint8', 'PatientID__24', 'uint8', 'PatientID__25', 'uint8', 'PatientID__26', 'uint8', 'PatientID__27', 'uint8', 'PatientID__28', 'uint8', 'PatientID__29', 'uint8', 'PatientID__30', 'uint8', 'PatientID__31', 'uint8', 'PatientID__32', 'uint8', 'PatientID__33', 'uint8', 'PatientID__34', 'uint8', 'PatientID__35', 'uint8', 'PatientID__36', 'uint8', 'PatientID__37', 'uint8', 'PatientID__38', 'uint8', 'PatientID__39', 'uint8', 'PatientID__40', 'uint8', 'PatientID__41', 'uint8', 'PatientID__42', 'uint8', 'PatientID__43', 'uint8', 'PatientID__44', 'uint8', 'PatientID__45', 'uint8', 'PatientID__46', 'uint8', 'PatientID__47', 'uint8', 'PatientID__48', 'uint8', 'PatientID__49', 'uint8', 'PatientID__50', 'uint8', 'PatientID__51', 'uint8', 'PatientID__52', 'uint8', 'PatientID__53', 'uint8', 'PatientID__54', 'uint8', 'PatientID__55', 'uint8', 'PatientID__56', 'uint8', 'PatientID__57', 'uint8', 'PatientID__58', 'uint8', 'PatientID__59', 'uint8', 'PatientID__60', 'uint8', 'PatientID__61', 'uint8', 'PatientID__62', 'uint8', 'PatientID__63', 'uint8', 'PatientID__64', 'uint8', 'PatientID__65', 'uint8', 'PatientID__66', 'uint8', 'PatientID__67', 'uint8', 'PatientID__68', 'uint8', 'PatientID__69', 'uint8', 'PatientID__70', 'uint8', 'PatientID__71', 'uint8', 'PatientID__72', 'uint8', 'PatientID__73', 'uint8', 'PatientID__74', 'uint8', 'PatientID__75', 'uint8', 'PatientID__76', 'uint8', 'PatientID__77', 'uint8', 'PatientID__78', 'uint8', 'PatientID__79', 'uint8', 'PatientID__80', 'uint8', 'PatientID__81', 'uint8', 'PatientID__82', 'uint8', 'PatientID__83', 'uint8', 'PatientID__84', 'uint8', 'PatientID__85', 'uint8', 'PatientID__86', 'uint8', 'PatientID__87', 'uint8', 'PatientID__88', 'uint8', 'PatientID__89', 'uint8', 'PatientID__90', 'uint8', 'PatientID__91', 'uint8', 'PatientID__92', 'uint8', 'PatientID__93', 'uint8', 'PatientID__94', 'uint8', 'PatientID__95', 'uint8', 'PatientID__96', 'uint8', 'PatientID__97', 'uint8', 'PatientID__98', 'uint8', 'PatientID__99', 'uint8', 'PatientID__100', 'uint8', 'PatientID__101', 'uint8', 'PatientID__102', 'uint8', 'PatientID__103', 'uint8', 'PatientID__104', 'uint8', 'PatientID__105', 'uint8', 'PatientID__106', 'uint8', 'PatientID__107', 'uint8', 'PatientID__108', 'uint8', 'PatientID__109', 'uint8', 'PatientID__110', 'uint8', 'PatientID__111', 'uint8', 'PatientID__112', 'uint8', 'PatientID__113', 'uint8', 'PatientID__114', 'uint8', 'PatientID__115', 'uint8', 'PatientID__116', 'uint8', 'PatientID__117', 'uint8', 'PatientID__118', 'uint8', 'PatientID__119', 'uint8', 'PatientID__120', 'uint8', 'PatientID__121', 'uint8', 'PatientID__122', 'uint8', 'PatientID__123', 'uint8', 'PatientID__124', 'uint8', 'PatientID__125', 'uint8', 'PatientID__126', 'uint8', 'PatientID__127', 'uint8', 'PatientID__128', 'uint8', 'UserString1__1', 'uint8', 'UserString1__2', 'uint8', 'UserString1__3', 'uint8', 'UserString1__4', 'uint8', 'UserString1__5', 'uint8', 'UserString1__6', 'uint8', 'UserString1__7', 'uint8', 'UserString1__8', 'uint8', 'UserString1__9', 'uint8', 'UserString1__10', 'uint8', 'UserString1__11', 'uint8', 'UserString1__12', 'uint8', 'UserString1__13', 'uint8', 'UserString1__14', 'uint8', 'UserString1__15', 'uint8', 'UserString1__16', 'uint8', 'UserString1__17', 'uint8', 'UserString1__18', 'uint8', 'UserString1__19', 'uint8', 'UserString1__20', 'uint8', 'UserString1__21', 'uint8', 'UserString1__22', 'uint8', 'UserString1__23', 'uint8', 'UserString1__24', 'uint8', 'UserString1__25', 'uint8', 'UserString1__26', 'uint8', 'UserString1__27', 'uint8', 'UserString1__28', 'uint8', 'UserString1__29', 'uint8', 'UserString1__30', 'uint8', 'UserString1__31', 'uint8', 'UserString1__32', 'uint8', 'UserString1__33', 'uint8', 'UserString1__34', 'uint8', 'UserString1__35', 'uint8', 'UserString1__36', 'uint8', 'UserString1__37', 'uint8', 'UserString1__38', 'uint8', 'UserString1__39', 'uint8', 'UserString1__40', 'uint8', 'UserString1__41', 'uint8', 'UserString1__42', 'uint8', 'UserString1__43', 'uint8', 'UserString1__44', 'uint8', 'UserString1__45', 'uint8', 'UserString1__46', 'uint8', 'UserString1__47', 'uint8', 'UserString1__48', 'uint8', 'UserString1__49', 'uint8', 'UserString1__50', 'uint8', 'UserString1__51', 'uint8', 'UserString1__52', 'uint8', 'UserString1__53', 'uint8', 'UserString1__54', 'uint8', 'UserString1__55', 'uint8', 'UserString1__56', 'uint8', 'UserString1__57', 'uint8', 'UserString1__58', 'uint8', 'UserString1__59', 'uint8', 'UserString1__60', 'uint8', 'UserString1__61', 'uint8', 'UserString1__62', 'uint8', 'UserString1__63', 'uint8', 'UserString1__64', 'uint8', 'UserString2__1', 'uint8', 'UserString2__2', 'uint8', 'UserString2__3', 'uint8', 'UserString2__4', 'uint8', 'UserString2__5', 'uint8', 'UserString2__6', 'uint8', 'UserString2__7', 'uint8', 'UserString2__8', 'uint8', 'UserString2__9', 'uint8', 'UserString2__10', 'uint8', 'UserString2__11', 'uint8', 'UserString2__12', 'uint8', 'UserString2__13', 'uint8', 'UserString2__14', 'uint8', 'UserString2__15', 'uint8', 'UserString2__16', 'uint8', 'UserString2__17', 'uint8', 'UserString2__18', 'uint8', 'UserString2__19', 'uint8', 'UserString2__20', 'uint8', 'UserString2__21', 'uint8', 'UserString2__22', 'uint8', 'UserString2__23', 'uint8', 'UserString2__24', 'uint8', 'UserString2__25', 'uint8', 'UserString2__26', 'uint8', 'UserString2__27', 'uint8', 'UserString2__28', 'uint8', 'UserString2__29', 'uint8', 'UserString2__30', 'uint8', 'UserString2__31', 'uint8', 'UserString2__32', 'uint8', 'UserString2__33', 'uint8', 'UserString2__34', 'uint8', 'UserString2__35', 'uint8', 'UserString2__36', 'uint8', 'UserString2__37', 'uint8', 'UserString2__38', 'uint8', 'UserString2__39', 'uint8', 'UserString2__40', 'uint8', 'UserString2__41', 'uint8', 'UserString2__42', 'uint8', 'UserString2__43', 'uint8', 'UserString2__44', 'uint8', 'UserString2__45', 'uint8', 'UserString2__46', 'uint8', 'UserString2__47', 'uint8', 'UserString2__48', 'uint8', 'UserString2__49', 'uint8', 'UserString2__50', 'uint8', 'UserString2__51', 'uint8', 'UserString2__52', 'uint8', 'UserString2__53', 'uint8', 'UserString2__54', 'uint8', 'UserString2__55', 'uint8', 'UserString2__56', 'uint8', 'UserString2__57', 'uint8', 'UserString2__58', 'uint8', 'UserString2__59', 'uint8', 'UserString2__60', 'uint8', 'UserString2__61', 'uint8', 'UserString2__62', 'uint8', 'UserString2__63', 'uint8', 'UserString2__64', 'uint8');
structs.TMSiDevImpReport.packing=1;
structs.TMSiDevImpReport.members=struct('ChanNr', 'uint16', 'Impedance', 'single');
structs.TMSiDevRecCfg.packing=1;
structs.TMSiDevRecCfg.members=struct('ProtoVer', 'int16', 'FileType', 'int16', 'StartControl', 'int16', 'EndControl', 'int32', 'StorageStatus', 'int32', 'InitIdentifier', 'int32', 'PrefixFileName__1', 'uint8', 'PrefixFileName__2', 'uint8', 'PrefixFileName__3', 'uint8', 'PrefixFileName__4', 'uint8', 'PrefixFileName__5', 'uint8', 'PrefixFileName__6', 'uint8', 'PrefixFileName__7', 'uint8', 'PrefixFileName__8', 'uint8', 'PrefixFileName__9', 'uint8', 'PrefixFileName__10', 'uint8', 'PrefixFileName__11', 'uint8', 'PrefixFileName__12', 'uint8', 'PrefixFileName__13', 'uint8', 'PrefixFileName__14', 'uint8', 'PrefixFileName__15', 'uint8', 'PrefixFileName__16', 'uint8', 'StartTime', 'TMSiTime', 'StopTime', 'TMSiTime', 'IntervalSeconds', 'int16', 'IntervalMinutes', 'int16', 'IntervalHours', 'int16', 'IntervalDays', 'int16', 'AlarmTimeCount', 'int32', 'PreImp', 'int16', 'PreImpSec', 'int16', 'PatientID__1', 'uint8', 'PatientID__2', 'uint8', 'PatientID__3', 'uint8', 'PatientID__4', 'uint8', 'PatientID__5', 'uint8', 'PatientID__6', 'uint8', 'PatientID__7', 'uint8', 'PatientID__8', 'uint8', 'PatientID__9', 'uint8', 'PatientID__10', 'uint8', 'PatientID__11', 'uint8', 'PatientID__12', 'uint8', 'PatientID__13', 'uint8', 'PatientID__14', 'uint8', 'PatientID__15', 'uint8', 'PatientID__16', 'uint8', 'PatientID__17', 'uint8', 'PatientID__18', 'uint8', 'PatientID__19', 'uint8', 'PatientID__20', 'uint8', 'PatientID__21', 'uint8', 'PatientID__22', 'uint8', 'PatientID__23', 'uint8', 'PatientID__24', 'uint8', 'PatientID__25', 'uint8', 'PatientID__26', 'uint8', 'PatientID__27', 'uint8', 'PatientID__28', 'uint8', 'PatientID__29', 'uint8', 'PatientID__30', 'uint8', 'PatientID__31', 'uint8', 'PatientID__32', 'uint8', 'PatientID__33', 'uint8', 'PatientID__34', 'uint8', 'PatientID__35', 'uint8', 'PatientID__36', 'uint8', 'PatientID__37', 'uint8', 'PatientID__38', 'uint8', 'PatientID__39', 'uint8', 'PatientID__40', 'uint8', 'PatientID__41', 'uint8', 'PatientID__42', 'uint8', 'PatientID__43', 'uint8', 'PatientID__44', 'uint8', 'PatientID__45', 'uint8', 'PatientID__46', 'uint8', 'PatientID__47', 'uint8', 'PatientID__48', 'uint8', 'PatientID__49', 'uint8', 'PatientID__50', 'uint8', 'PatientID__51', 'uint8', 'PatientID__52', 'uint8', 'PatientID__53', 'uint8', 'PatientID__54', 'uint8', 'PatientID__55', 'uint8', 'PatientID__56', 'uint8', 'PatientID__57', 'uint8', 'PatientID__58', 'uint8', 'PatientID__59', 'uint8', 'PatientID__60', 'uint8', 'PatientID__61', 'uint8', 'PatientID__62', 'uint8', 'PatientID__63', 'uint8', 'PatientID__64', 'uint8', 'PatientID__65', 'uint8', 'PatientID__66', 'uint8', 'PatientID__67', 'uint8', 'PatientID__68', 'uint8', 'PatientID__69', 'uint8', 'PatientID__70', 'uint8', 'PatientID__71', 'uint8', 'PatientID__72', 'uint8', 'PatientID__73', 'uint8', 'PatientID__74', 'uint8', 'PatientID__75', 'uint8', 'PatientID__76', 'uint8', 'PatientID__77', 'uint8', 'PatientID__78', 'uint8', 'PatientID__79', 'uint8', 'PatientID__80', 'uint8', 'PatientID__81', 'uint8', 'PatientID__82', 'uint8', 'PatientID__83', 'uint8', 'PatientID__84', 'uint8', 'PatientID__85', 'uint8', 'PatientID__86', 'uint8', 'PatientID__87', 'uint8', 'PatientID__88', 'uint8', 'PatientID__89', 'uint8', 'PatientID__90', 'uint8', 'PatientID__91', 'uint8', 'PatientID__92', 'uint8', 'PatientID__93', 'uint8', 'PatientID__94', 'uint8', 'PatientID__95', 'uint8', 'PatientID__96', 'uint8', 'PatientID__97', 'uint8', 'PatientID__98', 'uint8', 'PatientID__99', 'uint8', 'PatientID__100', 'uint8', 'PatientID__101', 'uint8', 'PatientID__102', 'uint8', 'PatientID__103', 'uint8', 'PatientID__104', 'uint8', 'PatientID__105', 'uint8', 'PatientID__106', 'uint8', 'PatientID__107', 'uint8', 'PatientID__108', 'uint8', 'PatientID__109', 'uint8', 'PatientID__110', 'uint8', 'PatientID__111', 'uint8', 'PatientID__112', 'uint8', 'PatientID__113', 'uint8', 'PatientID__114', 'uint8', 'PatientID__115', 'uint8', 'PatientID__116', 'uint8', 'PatientID__117', 'uint8', 'PatientID__118', 'uint8', 'PatientID__119', 'uint8', 'PatientID__120', 'uint8', 'PatientID__121', 'uint8', 'PatientID__122', 'uint8', 'PatientID__123', 'uint8', 'PatientID__124', 'uint8', 'PatientID__125', 'uint8', 'PatientID__126', 'uint8', 'PatientID__127', 'uint8', 'PatientID__128', 'uint8', 'UserString1__1', 'uint8', 'UserString1__2', 'uint8', 'UserString1__3', 'uint8', 'UserString1__4', 'uint8', 'UserString1__5', 'uint8', 'UserString1__6', 'uint8', 'UserString1__7', 'uint8', 'UserString1__8', 'uint8', 'UserString1__9', 'uint8', 'UserString1__10', 'uint8', 'UserString1__11', 'uint8', 'UserString1__12', 'uint8', 'UserString1__13', 'uint8', 'UserString1__14', 'uint8', 'UserString1__15', 'uint8', 'UserString1__16', 'uint8', 'UserString1__17', 'uint8', 'UserString1__18', 'uint8', 'UserString1__19', 'uint8', 'UserString1__20', 'uint8', 'UserString1__21', 'uint8', 'UserString1__22', 'uint8', 'UserString1__23', 'uint8', 'UserString1__24', 'uint8', 'UserString1__25', 'uint8', 'UserString1__26', 'uint8', 'UserString1__27', 'uint8', 'UserString1__28', 'uint8', 'UserString1__29', 'uint8', 'UserString1__30', 'uint8', 'UserString1__31', 'uint8', 'UserString1__32', 'uint8', 'UserString1__33', 'uint8', 'UserString1__34', 'uint8', 'UserString1__35', 'uint8', 'UserString1__36', 'uint8', 'UserString1__37', 'uint8', 'UserString1__38', 'uint8', 'UserString1__39', 'uint8', 'UserString1__40', 'uint8', 'UserString1__41', 'uint8', 'UserString1__42', 'uint8', 'UserString1__43', 'uint8', 'UserString1__44', 'uint8', 'UserString1__45', 'uint8', 'UserString1__46', 'uint8', 'UserString1__47', 'uint8', 'UserString1__48', 'uint8', 'UserString1__49', 'uint8', 'UserString1__50', 'uint8', 'UserString1__51', 'uint8', 'UserString1__52', 'uint8', 'UserString1__53', 'uint8', 'UserString1__54', 'uint8', 'UserString1__55', 'uint8', 'UserString1__56', 'uint8', 'UserString1__57', 'uint8', 'UserString1__58', 'uint8', 'UserString1__59', 'uint8', 'UserString1__60', 'uint8', 'UserString1__61', 'uint8', 'UserString1__62', 'uint8', 'UserString1__63', 'uint8', 'UserString1__64', 'uint8', 'UserString2__1', 'uint8', 'UserString2__2', 'uint8', 'UserString2__3', 'uint8', 'UserString2__4', 'uint8', 'UserString2__5', 'uint8', 'UserString2__6', 'uint8', 'UserString2__7', 'uint8', 'UserString2__8', 'uint8', 'UserString2__9', 'uint8', 'UserString2__10', 'uint8', 'UserString2__11', 'uint8', 'UserString2__12', 'uint8', 'UserString2__13', 'uint8', 'UserString2__14', 'uint8', 'UserString2__15', 'uint8', 'UserString2__16', 'uint8', 'UserString2__17', 'uint8', 'UserString2__18', 'uint8', 'UserString2__19', 'uint8', 'UserString2__20', 'uint8', 'UserString2__21', 'uint8', 'UserString2__22', 'uint8', 'UserString2__23', 'uint8', 'UserString2__24', 'uint8', 'UserString2__25', 'uint8', 'UserString2__26', 'uint8', 'UserString2__27', 'uint8', 'UserString2__28', 'uint8', 'UserString2__29', 'uint8', 'UserString2__30', 'uint8', 'UserString2__31', 'uint8', 'UserString2__32', 'uint8', 'UserString2__33', 'uint8', 'UserString2__34', 'uint8', 'UserString2__35', 'uint8', 'UserString2__36', 'uint8', 'UserString2__37', 'uint8', 'UserString2__38', 'uint8', 'UserString2__39', 'uint8', 'UserString2__40', 'uint8', 'UserString2__41', 'uint8', 'UserString2__42', 'uint8', 'UserString2__43', 'uint8', 'UserString2__44', 'uint8', 'UserString2__45', 'uint8', 'UserString2__46', 'uint8', 'UserString2__47', 'uint8', 'UserString2__48', 'uint8', 'UserString2__49', 'uint8', 'UserString2__50', 'uint8', 'UserString2__51', 'uint8', 'UserString2__52', 'uint8', 'UserString2__53', 'uint8', 'UserString2__54', 'uint8', 'UserString2__55', 'uint8', 'UserString2__56', 'uint8', 'UserString2__57', 'uint8', 'UserString2__58', 'uint8', 'UserString2__59', 'uint8', 'UserString2__60', 'uint8', 'UserString2__61', 'uint8', 'UserString2__62', 'uint8', 'UserString2__63', 'uint8', 'UserString2__64', 'uint8');
structs.TMSiDevRepairReq.packing=1;
structs.TMSiDevRepairReq.members=struct('SampleStartCntr', 'uint32', 'NROfSampleSets', 'uint32');
structs.TMSiDevChCal.packing=1;
structs.TMSiDevChCal.members=struct('ChanNr', 'uint32', 'ChanGianCorr', 'single', 'ChanOffsetCorr', 'single');
structs.TMSiDevGetDiagStat.packing=1;
structs.TMSiDevGetDiagStat.members=struct('DRHealthState', 'uint16', 'DRErrors', 'int16', 'DRLogSize', 'uint32', 'DSHealthState', 'uint16', 'DSErrors', 'int16', 'DSLogSize', 'uint32');
structs.TMSiDevSetDiagStat.packing=1;
structs.TMSiDevSetDiagStat.members=struct('DRLoggingState', 'uint16', 'DRResetLog', 'uint16', 'DSLoggingState', 'uint16', 'DSResetLog', 'uint16');
structs.TMSiDevFWStatusReport.packing=1;
structs.TMSiDevFWStatusReport.members=struct('FWVersion', 'int16', 'AppVersion', 'int16', 'FWStatus', 'int32', 'MaxPushSize', 'uint32');
structs.TMSiFWHeaderFile.packing=1;
structs.TMSiFWHeaderFile.members=struct('FWVersion', 'int16', 'FWHardwareVersion', 'int16', 'DevID', 'int16', 'FWSize', 'uint32', 'Checksum', 'int32');
structs.TMSiDevProductConfig.packing=1;
structs.TMSiDevProductConfig.members=struct('DRSerialNumber', 'uint32', 'DSSerialNumber', 'uint32', 'DRDevID', 'uint16', 'DSDevID', 'uint16', 'NrOfHWChannels', 'uint16', 'NrOfChannels', 'uint16');
structs.TMSiDevProductChCfg.packing=1;
structs.TMSiDevProductChCfg.members=struct('ChannelType', 'uint16', 'ChannelFormat', 'uint16', 'Unitconva', 'single', 'Unitconvb', 'single', 'Exp', 'int16', 'UnitName__1', 'uint8', 'UnitName__2', 'uint8', 'UnitName__3', 'uint8', 'UnitName__4', 'uint8', 'UnitName__5', 'uint8', 'UnitName__6', 'uint8', 'UnitName__7', 'uint8', 'UnitName__8', 'uint8', 'UnitName__9', 'uint8', 'UnitName__10', 'uint8', 'DefChanName__1', 'uint8', 'DefChanName__2', 'uint8', 'DefChanName__3', 'uint8', 'DefChanName__4', 'uint8', 'DefChanName__5', 'uint8', 'DefChanName__6', 'uint8', 'DefChanName__7', 'uint8', 'DefChanName__8', 'uint8', 'DefChanName__9', 'uint8', 'DefChanName__10', 'uint8');
structs.TMSiDevNetworkConfig.packing=1;
structs.TMSiDevNetworkConfig.members=struct('NetworkMode', 'uint16', 'DSIPAddress__1', 'uint8', 'DSIPAddress__2', 'uint8', 'DSIPAddress__3', 'uint8', 'DSIPAddress__4', 'uint8', 'DSIPAddress__5', 'uint8', 'DSIPAddress__6', 'uint8', 'DSIPAddress__7', 'uint8', 'DSIPAddress__8', 'uint8', 'DSIPAddress__9', 'uint8', 'DSIPAddress__10', 'uint8', 'DSIPAddress__11', 'uint8', 'DSIPAddress__12', 'uint8', 'DSIPAddress__13', 'uint8', 'DSIPAddress__14', 'uint8', 'DSIPAddress__15', 'uint8', 'DSIPAddress__16', 'uint8', 'DSNetmask__1', 'uint8', 'DSNetmask__2', 'uint8', 'DSNetmask__3', 'uint8', 'DSNetmask__4', 'uint8', 'DSNetmask__5', 'uint8', 'DSNetmask__6', 'uint8', 'DSNetmask__7', 'uint8', 'DSNetmask__8', 'uint8', 'DSNetmask__9', 'uint8', 'DSNetmask__10', 'uint8', 'DSNetmask__11', 'uint8', 'DSNetmask__12', 'uint8', 'DSNetmask__13', 'uint8', 'DSNetmask__14', 'uint8', 'DSNetmask__15', 'uint8', 'DSNetmask__16', 'uint8', 'DSGateway__1', 'uint8', 'DSGateway__2', 'uint8', 'DSGateway__3', 'uint8', 'DSGateway__4', 'uint8', 'DSGateway__5', 'uint8', 'DSGateway__6', 'uint8', 'DSGateway__7', 'uint8', 'DSGateway__8', 'uint8', 'DSGateway__9', 'uint8', 'DSGateway__10', 'uint8', 'DSGateway__11', 'uint8', 'DSGateway__12', 'uint8', 'DSGateway__13', 'uint8', 'DSGateway__14', 'uint8', 'DSGateway__15', 'uint8', 'DSGateway__16', 'uint8');
enuminfo.e_FWAction=struct('FWAct_Unknown',0,'FWAct_Flash_Reboot',1,'FWAct_ABORT',2);
enuminfo.ImpedanceControl=struct('ImpadanceStop',0,'ImpedanceStart',1);
enuminfo.e_TMSiDevice=struct('Dev_Unknown',0,'Dev_DS',1,'Dev_DR',2);
enuminfo.FirmwareStatus=struct('FWStatus_Unknown',-1,'All_OK',0,'Upgrading',1,'Verify_OK',2,'Verify_Fail',3);
enuminfo.SampleControl=struct('STOPSamplingDevice',0,'STARTSamplingDevice',1,'STOPWiFiStream',2);
enuminfo.TMSiInterfaceType=struct('IF_TYPE_UNKNOWN',0,'IF_TYPE_USB',1,'IF_TYPE_NETWORK',2,'IF_TYPE_WIFI',3,'IF_TYPE_ELECTRICAL',4,'IF_TYPE_OPTICAL',5,'IF_TYPE_BLUETOOTH',6);
enuminfo.TMSiDeviceRetValType=struct('TMSI_OK',0,'TMSI_DR_CHECKSUM_ERROR',16842753,'TMSI_DS_CHECKSUM_ERROR',33619969,'TMSI_DR_UNKNOWN_COMMAND',16842754,'TMSI_DS_UNKNOWN_COMMAND',33619970,'TMSI_DR_RESPONSE_TIMEMOUT',16842755,'TMSI_DS_RESPONSE_TIMEMOUT',33619971,'TMSI_DR_DEVICE_BUSY',16842756,'TMSI_DS_DEVICE_BUSY',33619972,'TMSI_DR_COMMAND_NOT_SUPPORTED',16842757,'TMSI_DS_COMMAND_NOT_SUPPORTED',33619973,'TMSI_DR_COMMAND_NOT_POSSIBLE',16842758,'TMSI_DR_DEVICE_NOT_AVAILABLE',16842759,'TMSI_DS_DEVICE_NOT_AVAILABLE',33619975,'TMSI_DS_INTERFACE_NOT_AVAILABLE',33619976,'TMSI_DS_COMMAND_NOT_ALLOWED',33619977,'TMSI_DS_PROCESSING_ERROR',33619978,'TMSI_DS_UNKNOWN_INTERNAL_ERROR',33619979,'TMSI_DR_COMMAND_NOT_SUPPORTED_BY_CHANNEL',16973825,'TMSI_DR_AMBREC_ILLEGAL_START_CTRL',16973826,'TMSI_DS_PACKET_LENGTH_ERROR',33619980,'TMSI_DS_DEVICE_ALREADY_OPEN',33619981,'TMSI_DLL_NOT_IMPLEMENTED',50335744,'TMSI_DLL_INVALID_PARAM',50335745,'TMSI_DLL_CHECKSUM_ERROR',50335746,'TMSI_DLL_ETH_HEADER_ERROR',50335747,'TMSI_DLL_INTERNAL_ERROR',50335748,'TMSI_DLL_BUFFER_ERROR',50335749,'TMSI_DLL_INVALID_HANDLE',50335750,'TMSI_DLL_INTF_OPEN_ERROR',50339840,'TMSI_DLL_INTF_CLOSE_ERROR',50339841,'TMSI_DLL_INTF_SEND_ERROR',50339842,'TMSI_DLL_INTF_RECV_ERROR',50339843,'TMSI_DLL_INTF_RECV_TIMEOUT',50339844,'TMSI_DLL_LOST_CONNECTION',50339845);
methodinfo=fcns;